{"ast":null,"code":"import _slicedToArray from \"C:/Users/91831/Desktop/React_Password_Generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport var usePasswordGenerator = function usePasswordGenerator() {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n  var generatePassword = function generatePassword(checkBoxData, length) {\n    var charset = \"\";\n    var selectedCheckBoxes = checkBoxData.filter(function (item) {\n      return item.state;\n    });\n    if (selectedCheckBoxes.length === 0) {\n      setErrorMessage(\"Please select at least one option\");\n      setPassword(\"\");\n    } else {\n      selectedCheckBoxes.forEach(function (item) {\n        switch (item.title) {\n          case \"Include Uppercase\":\n            charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n            break;\n          case \"Include Lowercase\":\n            charset += \"abcdefghijklmnopqrstuvwxyz\";\n            break;\n          case \"Include Numbers\":\n            charset += \"0123456789\";\n            break;\n          case \"Include Symbols\":\n            charset += \"!@#$%^&*()_+\";\n            break;\n          default:\n            break;\n        }\n      });\n      var generatedPassword = \"\";\n      for (var i = 0; i < length; i++) {\n        var randomIndex = Math.floor(Math.random() * charset.length);\n        generatedPassword += charset[randomIndex];\n      }\n      setPassword(generatedPassword);\n      setErrorMessage(\"\");\n    }\n  };\n  return {\n    password: password,\n    errorMessage: errorMessage,\n    generatePassword: generatePassword\n  };\n};\n_s(usePasswordGenerator, \"sqqSR+2lR4/ylIfagzmq6QNc3Ps=\");","map":{"version":3,"names":["useState","usePasswordGenerator","_s","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","errorMessage","setErrorMessage","generatePassword","checkBoxData","length","charset","selectedCheckBoxes","filter","item","state","forEach","title","generatedPassword","i","randomIndex","Math","floor","random"],"sources":["C:/Users/91831/Desktop/React_Password_Generator/src/usePasswordGenerator.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const usePasswordGenerator = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const generatePassword = (checkBoxData, length) => {\r\n    let charset = \"\";\r\n    const selectedCheckBoxes = checkBoxData.filter((item) => item.state);\r\n    if (selectedCheckBoxes.length === 0) {\r\n      setErrorMessage(\"Please select at least one option\");\r\n      setPassword(\"\");\r\n    } else {\r\n      selectedCheckBoxes.forEach((item) => {\r\n        switch (item.title) {\r\n          case \"Include Uppercase\":\r\n            charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n            break;\r\n          case \"Include Lowercase\":\r\n            charset += \"abcdefghijklmnopqrstuvwxyz\";\r\n            break;\r\n          case \"Include Numbers\":\r\n            charset += \"0123456789\";\r\n            break;\r\n          case \"Include Symbols\":\r\n            charset += \"!@#$%^&*()_+\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let generatedPassword = \"\";\r\n      for (let i = 0; i < length; i++) {\r\n        const randomIndex = Math.floor(Math.random() * charset.length);\r\n        generatedPassword += charset[randomIndex];\r\n      }\r\n      setPassword(generatedPassword);\r\n      setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return { password, errorMessage, generatePassword };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EAAAC,EAAA;EACxC,IAAAC,SAAA,GAAgCH,QAAQ,CAAC,EAAE,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAwCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,YAAY,EAAEC,MAAM,EAAK;IACjD,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAMC,kBAAkB,GAAGH,YAAY,CAACI,MAAM,CAAC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,KAAK;IAAA,EAAC;IACpE,IAAIH,kBAAkB,CAACF,MAAM,KAAK,CAAC,EAAE;MACnCH,eAAe,CAAC,mCAAmC,CAAC;MACpDJ,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM;MACLS,kBAAkB,CAACI,OAAO,CAAC,UAACF,IAAI,EAAK;QACnC,QAAQA,IAAI,CAACG,KAAK;UAChB,KAAK,mBAAmB;YACtBN,OAAO,IAAI,4BAA4B;YACvC;UACF,KAAK,mBAAmB;YACtBA,OAAO,IAAI,4BAA4B;YACvC;UACF,KAAK,iBAAiB;YACpBA,OAAO,IAAI,YAAY;YACvB;UACF,KAAK,iBAAiB;YACpBA,OAAO,IAAI,cAAc;YACzB;UACF;YACE;QACJ;MACF,CAAC,CAAC;MAEF,IAAIO,iBAAiB,GAAG,EAAE;MAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,MAAM,EAAES,CAAC,EAAE,EAAE;QAC/B,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,OAAO,CAACD,MAAM,CAAC;QAC9DQ,iBAAiB,IAAIP,OAAO,CAACS,WAAW,CAAC;MAC3C;MACAjB,WAAW,CAACe,iBAAiB,CAAC;MAC9BX,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEL,QAAQ,EAARA,QAAQ;IAAEI,YAAY,EAAZA,YAAY;IAAEE,gBAAgB,EAAhBA;EAAiB,CAAC;AACrD,CAAC;AAACV,EAAA,CAzCWD,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}